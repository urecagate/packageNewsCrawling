name: Build, Push, and Run Docker Container

on:
  push:
    branches:
      - master
    paths:
      - Dockerfile
      - main.py
      - utils.py
      - config.py
      - scrapers/**
  workflow_dispatch:
    inputs:
      article_limit:
        description: '수집할 최대 기사 수'
        required: false
        default: '30'
      min_score:
        description: '기사 최소 평가 점수'
        required: false
        default: '5.0'
      per_keyword_limit:
        description: '키워드당 최대 기사 수'
        required: false
        default: '10'

jobs:
  build-push-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker Image without cache
        run: docker build --no-cache -t my-automation-image -f Dockerfile .

      - name: Tag Docker Image
        run: docker tag my-automation-image ghcr.io/${{ github.repository_owner }}/my-automation-image:latest

      - name: Push Docker Image
        run: docker push ghcr.io/${{ github.repository_owner }}/my-automation-image:latest

      - name: List Docker Images
        run: docker images

      - name: Run Docker Container
        run: docker run -e EMAIL_PASSWORD="${{ secrets.EMAIL_PASSWORD }}" -e EMAIL_RECIPIENT="${{ vars.EMAIL_RECIPIENT }}" -e CI=true -e ARTICLE_LIMIT="${{ vars.ARTICLE_LIMIT || github.event.inputs.article_limit || '30' }}" -e MIN_ARTICLE_SCORE="${{ vars.MIN_ARTICLE_SCORE || github.event.inputs.min_score || '5.0' }}" -e PER_KEYWORD_LIMIT="${{ vars.PER_KEYWORD_LIMIT || github.event.inputs.per_keyword_limit || '10' }}" --rm ghcr.io/${{ github.repository_owner }}/my-automation-image:latest
